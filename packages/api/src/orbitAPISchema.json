{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "AttachmentIngestEvent": {
            "additionalProperties": false,
            "properties": {
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "mimeType": {
                    "$ref": "#/definitions/AttachmentMIMEType"
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "attachmentIngest"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "entityID",
                "id",
                "mimeType",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        },
        "AttachmentMIMEType": {
            "enum": [
                "image/jpeg",
                "image/png",
                "image/svg+xml"
            ],
            "type": "string"
        },
        "BlobLike<AttachmentMIMEType>": {
            "additionalProperties": true,
            "description": "i.e. a DOM Blob or a fetch-blob Blob",
            "type": "object"
        },
        "ClozeTaskContent": {
            "additionalProperties": false,
            "properties": {
                "body": {
                    "$ref": "#/definitions/TaskContentField"
                },
                "components": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ClozeTaskContentComponent"
                    },
                    "type": "object"
                },
                "type": {
                    "enum": [
                        "cloze"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "body",
                "components",
                "type"
            ],
            "type": "object"
        },
        "ClozeTaskContentComponent": {
            "additionalProperties": false,
            "properties": {
                "order": {
                    "type": "number"
                },
                "ranges": {
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "hint": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "length": {
                                "type": "number"
                            },
                            "startIndex": {
                                "type": "number"
                            }
                        },
                        "required": [
                            "hint",
                            "length",
                            "startIndex"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "order",
                "ranges"
            ],
            "type": "object"
        },
        "PlainTaskContent": {
            "additionalProperties": false,
            "properties": {
                "body": {
                    "$ref": "#/definitions/TaskContentField"
                },
                "type": {
                    "enum": [
                        "plain"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "body",
                "type"
            ],
            "type": "object"
        },
        "QATaskContent": {
            "additionalProperties": false,
            "properties": {
                "answer": {
                    "$ref": "#/definitions/TaskContentField"
                },
                "body": {
                    "$ref": "#/definitions/TaskContentField"
                },
                "type": {
                    "enum": [
                        "qa"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "answer",
                "body",
                "type"
            ],
            "type": "object"
        },
        "Task<TaskContent>": {
            "additionalProperties": false,
            "properties": {
                "componentStates": {
                    "$ref": "#/definitions/TaskComponentStates<TaskContent>",
                    "description": "Tasks may have several \"components\", each of which has its scheduling state separately tracked. For instance, cloze tasks have one component for each deletion. QA prompts just have one \"main\" component for now, but if we ever support double-sided flashcards, they'd have two, and so on."
                },
                "createdAtTimestampMillis": {
                    "type": "number"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "provenance": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/TaskProvenance"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "spec": {
                    "$ref": "#/definitions/TaskSpec<TaskContent>"
                },
                "type": {
                    "enum": [
                        "task"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "componentStates",
                "createdAtTimestampMillis",
                "id",
                "isDeleted",
                "metadata",
                "provenance",
                "spec",
                "type"
            ],
            "type": "object"
        },
        "TaskComponentStates<TaskContent>": {
            "additionalProperties": true,
            "description": "There will be one key in this structure for each key in the corresponding task content's `components` field.",
            "type": "object"
        },
        "TaskContentField": {
            "additionalProperties": false,
            "properties": {
                "attachments": {
                    "items": {
                        "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                        "type": "string"
                    },
                    "type": "array"
                },
                "text": {
                    "type": "string"
                }
            },
            "required": [
                "attachments",
                "text"
            ],
            "type": "object"
        },
        "TaskIngestEvent": {
            "additionalProperties": false,
            "properties": {
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "provenance": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/TaskProvenance"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "spec": {
                    "$ref": "#/definitions/TaskSpec<TaskContent>"
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "taskIngest"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "entityID",
                "id",
                "provenance",
                "spec",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        },
        "TaskProvenance": {
            "additionalProperties": false,
            "properties": {
                "colorPaletteName": {
                    "enum": [
                        "blue",
                        "brown",
                        "cyan",
                        "green",
                        "lime",
                        "orange",
                        "pink",
                        "purple",
                        "red",
                        "turquoise",
                        "violet",
                        "yellow"
                    ],
                    "type": "string"
                },
                "containerTitle": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "selectors": {
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/TaskProvenanceRangeSelector"
                            },
                            {
                                "$ref": "#/definitions/TaskProvenanceTextPositionSelector"
                            },
                            {
                                "$ref": "#/definitions/TaskProvenanceTextQuoteSelector"
                            },
                            {
                                "$ref": "#/definitions/TaskProvenanceXPathSelector"
                            }
                        ]
                    },
                    "type": "array"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "required": [
                "identifier"
            ],
            "type": "object"
        },
        "TaskProvenanceRangeSelector": {
            "additionalProperties": false,
            "properties": {
                "endSelector": {
                    "$ref": "#/definitions/TaskProvenanceXPathSelector"
                },
                "startSelector": {
                    "$ref": "#/definitions/TaskProvenanceXPathSelector"
                },
                "type": {
                    "enum": [
                        "RangeSelector"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "endSelector",
                "startSelector",
                "type"
            ],
            "type": "object"
        },
        "TaskProvenanceTextPositionSelector": {
            "additionalProperties": false,
            "properties": {
                "end": {
                    "type": "number"
                },
                "start": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "TextPositionSelector"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "end",
                "start",
                "type"
            ],
            "type": "object"
        },
        "TaskProvenanceTextQuoteSelector": {
            "additionalProperties": false,
            "properties": {
                "exact": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "TextQuoteSelector"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "exact",
                "prefix",
                "suffix",
                "type"
            ],
            "type": "object"
        },
        "TaskProvenanceXPathSelector": {
            "additionalProperties": false,
            "properties": {
                "refinedBy": {
                    "$ref": "#/definitions/TaskProvenanceTextPositionSelector"
                },
                "type": {
                    "enum": [
                        "XPathSelector"
                    ],
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "refinedBy",
                "type",
                "value"
            ],
            "type": "object"
        },
        "TaskRepetitionEvent": {
            "additionalProperties": false,
            "properties": {
                "componentID": {
                    "type": "string"
                },
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "outcome": {
                    "$ref": "#/definitions/TaskRepetitionOutcome"
                },
                "reviewSessionID": {
                    "type": "string"
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "taskRepetition"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "componentID",
                "entityID",
                "id",
                "outcome",
                "reviewSessionID",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        },
        "TaskRepetitionOutcome": {
            "enum": [
                "forgotten",
                "remembered",
                "skipped"
            ],
            "type": "string"
        },
        "TaskRescheduleEvent": {
            "additionalProperties": false,
            "properties": {
                "componentID": {
                    "type": "string"
                },
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "newDueTimestampMillis": {
                    "type": "number"
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "taskReschedule"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "componentID",
                "entityID",
                "id",
                "newDueTimestampMillis",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        },
        "TaskSpec<TaskContent>": {
            "additionalProperties": false,
            "properties": {
                "content": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/QATaskContent"
                        },
                        {
                            "$ref": "#/definitions/ClozeTaskContent"
                        },
                        {
                            "$ref": "#/definitions/PlainTaskContent"
                        }
                    ]
                },
                "type": {
                    "enum": [
                        "memory"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "content",
                "type"
            ],
            "type": "object"
        },
        "TaskUpdateDeletedEvent": {
            "additionalProperties": false,
            "properties": {
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "taskUpdatedDeleted"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "entityID",
                "id",
                "isDeleted",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        },
        "TaskUpdateMetadataEvent": {
            "additionalProperties": false,
            "properties": {
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "taskUpdateMetadata"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "entityID",
                "id",
                "metadata",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        },
        "TaskUpdateProvenanceEvent": {
            "additionalProperties": false,
            "properties": {
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "provenance": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/TaskProvenance"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "taskUpdateProvenanceEvent"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "entityID",
                "id",
                "provenance",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        },
        "TaskUpdateSpecEvent": {
            "additionalProperties": false,
            "properties": {
                "entityID": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "id": {
                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/TaskSpec<TaskContent>"
                },
                "timestampMillis": {
                    "type": "number"
                },
                "type": {
                    "enum": [
                        "taskUpdateSpec"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "entityID",
                "id",
                "spec",
                "timestampMillis",
                "type"
            ],
            "type": "object"
        }
    },
    "properties": {
        "/attachments/:id": {
            "additionalProperties": false,
            "properties": {
                "GET": {
                    "additionalProperties": false,
                    "properties": {
                        "params": {
                            "additionalProperties": false,
                            "properties": {
                                "id": {
                                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id"
                            ],
                            "type": "object"
                        },
                        "query": {
                            "properties": {
                            },
                            "type": "object"
                        },
                        "response": {
                            "additionalProperties": true,
                            "description": "i.e. a DOM Blob or a fetch-blob Blob",
                            "type": "object"
                        }
                    },
                    "required": [
                        "params",
                        "query"
                    ],
                    "type": "object"
                },
                "POST": {
                    "additionalProperties": false,
                    "description": "encode with multipart/form-data, with the file in part named \"file\"\nmake sure to include Content-Type heading for your attachment\nreturns application/json encoded ResponseObject<\"attachmentIDReference\", AttachmentID, AttachmentIDReference>",
                    "properties": {
                        "body": {
                            "additionalProperties": false,
                            "properties": {
                                "file": {
                                    "$ref": "#/definitions/BlobLike<AttachmentMIMEType>"
                                }
                            },
                            "required": [
                                "file"
                            ],
                            "type": "object"
                        },
                        "contentType": {
                            "pattern": "^multipart/form-data",
                            "type": "string"
                        },
                        "params": {
                            "additionalProperties": false,
                            "properties": {
                                "id": {
                                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id"
                            ],
                            "type": "object"
                        },
                        "response": {
                            "type": "null"
                        }
                    },
                    "required": [
                        "body",
                        "contentType",
                        "params"
                    ],
                    "type": "object"
                }
            },
            "type": "object"
        },
        "/attachments/ingestFromURLs": {
            "additionalProperties": false,
            "description": "This API adds attachments to a user's collection by downloading them from URLs. It also adds corresponding AttachmentIngestEvents to the user's store using the metadata from the downloaded resources. It's used in the embedded interface.",
            "properties": {
                "POST": {
                    "additionalProperties": false,
                    "properties": {
                        "body": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "id": {
                                        "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "url"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "contentType": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        },
                        "response": {
                            "type": "null"
                        }
                    },
                    "required": [
                        "body",
                        "contentType"
                    ],
                    "type": "object"
                }
            },
            "type": "object"
        },
        "/events": {
            "additionalProperties": false,
            "properties": {
                "GET": {
                    "additionalProperties": false,
                    "properties": {
                        "query": {
                            "additionalProperties": false,
                            "properties": {
                                "afterID": {
                                    "description": "Events are returned in an arbitrary stable order. When `afterID` is set, only events after that event's ID in the stable order will be returned. You can combine this parameter with `limit` to page through results.",
                                    "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                                    "type": "string"
                                },
                                "entityID": {
                                    "description": "When set, only events with matching `entityID` will be returned.",
                                    "type": "string"
                                },
                                "limit": {
                                    "default": 100,
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "response": {
                            "additionalProperties": false,
                            "properties": {
                                "hasMore": {
                                    "type": "boolean"
                                },
                                "items": {
                                    "items": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/definitions/TaskIngestEvent"
                                            },
                                            {
                                                "$ref": "#/definitions/TaskRepetitionEvent"
                                            },
                                            {
                                                "$ref": "#/definitions/TaskRescheduleEvent"
                                            },
                                            {
                                                "$ref": "#/definitions/TaskUpdateDeletedEvent"
                                            },
                                            {
                                                "$ref": "#/definitions/TaskUpdateSpecEvent"
                                            },
                                            {
                                                "$ref": "#/definitions/TaskUpdateProvenanceEvent"
                                            },
                                            {
                                                "$ref": "#/definitions/TaskUpdateMetadataEvent"
                                            },
                                            {
                                                "$ref": "#/definitions/AttachmentIngestEvent"
                                            }
                                        ]
                                    },
                                    "type": "array"
                                },
                                "type": {
                                    "enum": [
                                        "list"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "hasMore",
                                "items",
                                "type"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "query"
                    ],
                    "type": "object"
                },
                "PATCH": {
                    "additionalProperties": false,
                    "properties": {
                        "body": {
                            "items": {
                                "anyOf": [
                                    {
                                        "$ref": "#/definitions/TaskIngestEvent"
                                    },
                                    {
                                        "$ref": "#/definitions/TaskRepetitionEvent"
                                    },
                                    {
                                        "$ref": "#/definitions/TaskRescheduleEvent"
                                    },
                                    {
                                        "$ref": "#/definitions/TaskUpdateDeletedEvent"
                                    },
                                    {
                                        "$ref": "#/definitions/TaskUpdateSpecEvent"
                                    },
                                    {
                                        "$ref": "#/definitions/TaskUpdateProvenanceEvent"
                                    },
                                    {
                                        "$ref": "#/definitions/TaskUpdateMetadataEvent"
                                    },
                                    {
                                        "$ref": "#/definitions/AttachmentIngestEvent"
                                    }
                                ]
                            },
                            "type": "array"
                        },
                        "contentType": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        },
                        "response": {
                            "type": "null"
                        }
                    },
                    "required": [
                        "body",
                        "contentType"
                    ],
                    "type": "object"
                }
            },
            "type": "object"
        },
        "/tasks/bulkGet": {
            "additionalProperties": false,
            "properties": {
                "POST": {
                    "additionalProperties": false,
                    "properties": {
                        "body": {
                            "items": {
                                "pattern": "^[0-9a-zA-Z_\\-]{22}$",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "contentType": {
                            "enum": [
                                "application/json"
                            ],
                            "type": "string"
                        },
                        "response": {
                            "additionalProperties": false,
                            "properties": {
                                "hasMore": {
                                    "type": "boolean"
                                },
                                "items": {
                                    "items": {
                                        "$ref": "#/definitions/Task<TaskContent>"
                                    },
                                    "type": "array"
                                },
                                "type": {
                                    "enum": [
                                        "list"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "hasMore",
                                "items",
                                "type"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "body",
                        "contentType"
                    ],
                    "type": "object"
                }
            },
            "type": "object"
        }
    },
    "type": "object"
}

